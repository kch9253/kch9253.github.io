/*
2022 07 12 복습
SHOW OO; = 보고자하는 테이블
SELECT = 테이블행 생성 (사칙연산,논리연산,관계연산 전부가능) 관계연산경우 참이면 1 , 거짓이면 0
SELECT * FROM = 보고자하는 테이블행 목록을 전부 볼수있음
SELECT * FROM OO WHERE NAME = ''; = OO 에 속한 NAME 중 '' 안에 들어간값의 행만 보고싶을때
OR (||) 연산자 = 조건 하나만 맞아도 다른 비교값 출력가능
AND (&&) 연산자 = 조건 둘다 맞아야 출력가능
부정 = <> , != 2가지 사용가능 // 보통 <> 를 통해 부정표현 많이함 (OO 제외시켜라 또는 OO <> OO 이 아니다)
SELECT * FROM OO WHERE NAME IN ('','','') = OO 에 속한 NAME 중 IN을 통해 ()안에 들어있는 ''값들이 있으면 참 그리고 출력 
BETWEEN = 비교연산자 OO AND OO 이런식으로
AS "OO" = 별명짓기
ROUND(계산할값입력 ,1) = ,1 의 경우 바로앞에있는 입력값의 자리수 반올림
ORDER BY = 정렬 (ASC = 오름차순 / DESC = 내림차순)
OO LIKE '%OO%' = %가 앞에 붙으면 ~OO 을 포함한 값 출력 / %가 뒤에붙으면 OO~ 을 포함한 값 출력 / %% 양옆으로 붙으면 포함한 모든것 출력 / O%O 는 양옆의 값이 O인 값을출력
LIMIT = 보고싶은 행의개수만 보여준다 // 예외로 LIMIT 2,1 이렇게 두값이 입력될경우 앞의 2가 OFFSET이 돼고 1이 LIMIT의 값이된다
OFFSET = 지정값에 해당하는 행을 건너뛰는
char_length(찾고자하는 테이블제목) = 1; / 찾고자하는 테이블의 1자리수인 값들을 전부출력
= 을 쓸경우 값이 같을때만 참 / LIKE 같은경우 % 패턴을 사용하기위한 조건값이다

변수선언하는경우 @asdafas := 값; 이런식으로 설정해줘야한다 // JAVA 와 다른게 @,: 두개가 추가된다는것
DB 에서 변수를 선언한 값으로 프로그램 사용하면 그값이 살아있지만 프로그램을 종료할경우 변수선언의값이 날아간다 (초기화됨)
*/



