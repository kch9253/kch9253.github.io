public class TestTypes {
	public static void main(String[] args) {
		
		
		// (불만형타입)
		
		// char a = (char) 65;
		
		// System.out.println(a);
		
		
		// int num = (int) a;
		
		// System.out.println(num);
		
		
		
		
		//--------------------------------------------------------------------------------------
		
		
		//(실수형예시)
		
		// 소수점부분의 값이 떨어져나간다 . 앞자리수의 박스만 살아남음 결과값 : 123
		// 실수부분에서 정수부분만 얻고싶을때 주로쓰임
		
		// double 의경우 실수값이기때문에 123.456 까지의 박스를 형성한다
		// int 의 경우는 정수기때문에 소수점을뺀 123 까지의 박스를 형성한다
		// int 가 double 박스크기를 먹을수없기때문에 int i = (int) 를 추가로 입력하여 정수값의 박스크기만 먹는다 (123)의 크기만먹음
		
		// double d = 123.456;
		// int i = (int) d;
	
		// System.out.println(i);
		
		
		// --------------------------------------------------------------------------------------
		
		//(정수형예시)
		 
		// byte b = 10;
		
		// short s = 100;
		// int i = (int) 2156465416L;
		// long l = 10000;
		
		// int sum = b + s; 
		
						// int 대신 byte로 바꿔서 출력하면 에러뜸 
		                 //(큰수를 가진 박스를 형성해야하는데 큰수보다 작은값의 박스를 형성하면 에러뜸 무조건)
						 //박스가 커진다 (자료형 확장) 확장은 자동적으로 이뤄진다 long > int > short > byte 이런식으로 
						 // 작은박스크기가 큰박스안에 들어갈경우 자동적으로 큰 박스로 자료형확장이 이뤄진다
						 
						 // 박스를 확장할경우 큰문제는 없다 다만 문제가 생길경우 큰박스를 작은박스안으로 축소하는과정이 에러다
						 // 예를 들어 int i 의값이 1000L 일경우 L 수식어때문에 에러가뜬다 1000L 를 입력하면 L의 값이 int안에 못들어감
						 
						 // (형변화) 1000L 이라는값이 int i 안에들어가길 원한다 하면 int i = (int) 1000L; 를 입력하면 가능
						 // 큰박스를 작은박스로 변경하고싶을경우 항상 손실은 감안하고 변경해야함 
						    // 예= 12315346L 이런 말도안되는큰값을 지정할경우 에러뜸
						 
						 
						 
		// System.out.println(i);
		
	}
}